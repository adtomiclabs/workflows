name: Update Readme

on:
  workflow_call:
    inputs:
      RELEASE_VERSION:
        required: true
        type: string
        description: "The version to use for the release"
      IS_DEPLOY:
        required: true
        default: 'false'
        type: string
        description: "If the update is because a deploy"
    secrets:
      GIT_CONFIG_TOKEN:
        required: true
      GIT_CONFIG_USER:
        required: true
      GIT_CONFIG_USER_EMAIL:
        required: true

jobs:
  release:
    name: Prepare readme
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GIT_CONFIG_TOKEN }}
          fetch-depth: 0

      # Sets up the git user that used to push the version change
      - name: Configure Git user
        run: |
          git config user.email ${{ secrets.GIT_CONFIG_USER_EMAIL }}
          git config user.name ${{ secrets.GIT_CONFIG_USER }}

      - name: Get Latest version
        if: inputs.IS_DEPLOY == 'false'
        run: |
          echo "LATEST_VERSION=$(git describe --tags --abbrev=0)" >> $GITHUB_ENV

      - name: Get Latest version
        if: inputs.IS_DEPLOY == 'true'
        run: |
          echo "LATEST_VERSION=${{ inputs.RELEASE_VERSION }}" >> $GITHUB_ENV

      - name: Get Ongoing version
        if: inputs.IS_DEPLOY == 'true'
        run: |
          echo "ONGOING_VERSION=$(git branch -r | grep release | tail -1 | sed 's/origin\/release\///' | xargs)" >> $GITHUB_ENV

      - name: Get Ongoing version
        if: inputs.IS_DEPLOY == 'false'
        run: |
          echo "ONGOING_VERSION=${{ inputs.RELEASE_VERSION }}" >> $GITHUB_ENV

      - name: Update readme with versions
        run: |
          git fetch --prune
          git checkout main
          tail -n +2 README.md > README.tmp && mv README.tmp README.md
          echo "Latest version: $LATEST_VERSION - Ongoing version: $ONGOING_VERSION" | cat - README.md > README.tmp && mv README.tmp README.md
          git add .
          git commit -m "SCM - Update readme with versions [skip ci]"
          git pull
          git push origin main
